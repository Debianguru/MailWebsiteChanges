{"name":"Mailwebsitechanges","tagline":"Python script to keep track of website updates; sends email notifications and provides RSS2 feed","body":"# MailWebsiteChanges\r\n\r\nPython script to keep track of website changes; sends email notifications on updates and/or also provides an RSS feed\r\n\r\nTo specify which parts of a website should be monitored, <b>XPath selectors</b> (e.g. \"//h1\"), <b>CSS selectors</b> (e.g. \"h1\"), <b>and regular expressions can be used</b> (just choose the tools you like!).\r\n\r\n<i>This is Open Source -- so please contribute eagerly! ;-)</i>\r\n\r\n\r\n## Configuration\r\nConfiguration can be done by creating a <code>config.py</code> file (just place this file in the program folder):\r\nSome examples:\r\n\r\n### Website definitions\r\n<pre>\r\n<code>\r\nsites = [\r\n\r\n          {'shortname': 'mywebsite1',\r\n           'uri': 'http://www.mywebsite1.com/info',\r\n           'contentcss': 'div'},\r\n\r\n          {'shortname': 'mywebsite2',\r\n           'uri': 'http://www.mywebsite2.com/info',\r\n           'contentxpath': '//*[contains(concat(\\' \\', normalize-space(@class), \\' \\'), \\' news-list-container \\')]',\r\n           'titlexpath': '//title'},\r\n\r\n          {'shortname': 'mywebsite3',\r\n           'uri': 'http://www.mywebsite3.com/info',\r\n           'type': 'text',\r\n           'contentregex': 'Version\\\"\\:\\d*\\.\\d*'}\r\n\r\n]\r\n</code>\r\n</pre>\r\n\r\n * parameters:\r\n\r\n   * <b>shortname</b>\r\n\r\n       short name of the entry, used as an identifier when sending email notifications\r\n\r\n   * <b>uri</b>\r\n\r\n       URI of the website\r\n\r\n   * <b>type</b> (optional; default: 'html')\r\n\r\n       content type of the website, e.g., 'xml'/'html'/'text'.\r\n\r\n   * <b>contentxpath</b> / <b>titlexpath</b> (optional)\r\n\r\n       XPath expression for the content/title sections to extract. If you prefer, you could use contentcss/titlecss instead.\r\n\r\n   * <b>contentcss</b> / <b>titlecss</b> (optional)\r\n\r\n       CSS expression for the content/title sections to extract.\r\n\r\n   * <b>contentregex</b> / <b>titleregex</b> (optional)\r\n\r\n       Regular expression.\r\n\r\n   * <b>encoding</b> (optional; default: 'utf-8')\r\n\r\n       Character encoding of the website, e.g., 'utf-8' or 'iso-8859-1'.\r\n\r\n\r\n * We collect some XPath/CSS snippets at this place: <a href=\"https://github.com/Debianguru/MailWebsiteChanges/wiki/snippets\">Snippet collection</a> - please feel free to add your own definitions!\r\n\r\n * The <b>--dry-run=\"shortname\"</b> option might be useful in order to validate and fine-tune a definition.\r\n\r\n * If you would like to keep the data stored in a different place than the working directory, you can include something like this:\r\n  <pre>\r\n   <code>\r\n  os.chdir('/path/to/data/directory')\r\n   </code>\r\n  </pre>\r\n\r\n### Mail settings\r\n<pre>\r\n<code>\r\nenableMailNotifications = True\r\nsubjectPostfix = 'A website has been updated!'\r\n\r\nsender = 'me@mymail.com'\r\nsmtphost = 'mysmtpprovider.com'\r\nuseTLS = True\r\nsmtpport = 587\r\nsmtpusername = sender\r\nsmtppwd = 'mypassword'\r\nreceiver = 'me2@mymail.com'\r\n</code>\r\n</pre>\r\n\r\nIf <em>receiver</em> is empty, no mail will be sent.\r\n\r\n\r\n### RSS Feeds\r\nIf you prefer to use the RSS feature, you just have to specify the path of the feed file which should be generated by the script (e.g., rssfile = 'feed.xml') and then point your webserver to that file. You can also invoke the FeedServer.py script which implements a very basic webserver.\r\n\r\n<pre>\r\n <code>\r\nenableRSSFeed = True\r\n\r\nrssfile = 'feed.xml'\r\nmaxFeeds = 100\r\n </code>\r\n</pre>\r\n\r\n\r\n### Program execution\r\nTo setup a job that periodically runs the script, simply attach something like this to your /etc/crontab:\r\n<pre>\r\n <code>\r\n0 8-22/2    * * *   root\t/usr/bin/python3 /path/to/MailWebsiteChanges/MailWebsiteChanges.py\r\n </code>\r\n</pre>\r\nThis will run the script every two hours between 8am and 10pm.\r\n\r\nIf you prefer invoking the script with an alternate configuration files, simply pass the name of the configuration file as an argument, e.g., for <code>my_alternate_config.py</code>, use <code>python3 MailWebsiteChanges --config=my_alternate_config</code>.\r\n\r\n\r\n## Requirements\r\nRequires Python 3, <a href=\"http://lxml.de/\">lxml</a>, and <a href=\"http://pythonhosted.org/cssselect/\">cssselect</a> (for Debian/Ubuntu, use <code>apt-get install python3</code> and <code>sudo pip-3.2 install lxml cssselect</code>).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}